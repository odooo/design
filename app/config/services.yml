# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
#    parameter_name: value
    #tontine.contrat.type.class: tontineBundle\Form\Type\ContratType

services:

#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

    #tontine.contrat.form.type:
     #   class: %tontine.contrat.type.class%
      #  arguments: [%biens%]
   
    agent.form.registration:
        class: tontineBundle\Form\AgentType
        tags:
            - { name: form.type, alias: agent_registration }

    tontine.entity_listener:
        class: tontineBundle\EntityListener\TontineEntityListener
        public: false
        arguments: ["@security.token_storage"]
        tags:
            - { name: "doctrine.orm.entity_listener" }

    ajaxify_search.routing_loader:
        class: AjaxifySearch\Routing\RouteLoader
        tags:
            - { name: routing.loader }

    ajaxify_search.controller:
        class: AjaxifySearch\AjaxifySearchController
        arguments: ['@doctrine.orm.entity_manager', '@templating']

    ajaxify_search.twig_extension:
        class: AjaxifySearch\AjaxifySearchTwigExtension
        arguments: ['@twig', '@router']
        tags:
            - { name: twig.extension }

    tontine.journal:
        class: tontineBundle\EventListener\JournalListener
        arguments: ["@security.token_storage", "@service_container"]
        tags:
            - { name: doctrine.event_listener, event: postPersist, method: postPersist }
            - { name: doctrine.event_listener, event: postRemove, method: postRemove}
            - { name: doctrine.event_listener, event: postUpdate, method: postUpdate}
            # - { name: doctrine.event_listener, event: postLoad, method: postLoad}

    
    twig.extension.text:
       class: Twig_Extensions_Extension_Text
       tags:
            - { name: twig.extension }
 
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }


    tontine.manager.group:
        class: tontineBundle\Manager\AgentGroupManager
        arguments: ['%roles_sections%', '%default_roles%']

    tontine.manager.dashboard:
        class: tontineBundle\Manager\DashboardManager
        arguments:  
            - '@doctrine.orm.entity_manager'
            - '@security.authorization_checker'
            - '@security.token_storage'

    tontine.form.agent_group:
        class: tontineBundle\Form\Type\AgentGroupType
        arguments: ['@tontine.manager.group']
        tags:
            - { name: form.type, alias: create_agent_group }
