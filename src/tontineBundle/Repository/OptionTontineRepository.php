<?php

namespace tontineBundle\Repository;

use EldoMagan\Doctrine\ORM\BaseRepository;

/**
 * OptionTontineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OptionTontineRepository extends BaseRepository
{
    function  findSearch($search){
        
        $qb = $this->createQueryBuilder('o');
        
        $controle=false;
        
        if( $search->getMode()){
            $qb->where("o.TypeTontine = :mode")
            ->setParameter('mode' , $search->getMode());
            $controle=true;  
        }
        
        if( $search->getMise()){
            if($controle){
                $qb->andWhere("o.montant <= :mont")->setParameter('mont' , $search->getMise());
            }else{
                $qb->where("o.montant <= :mont")->setParameter('mont' , $search->getMise());
                $controle=true; 
            }  
        }
        
        if( $search->getQuartier()){
            if( $search->getZone()){            
                $qb->leftJoin('o.BienTontine', 'b');
                if($controle){
                    $qb->andWhere("b.quartier = :q")->setParameter('q' , $search->getQuartier());
                }else{
                    $qb->where("b.quartier = :q")->setParameter('q' , $search->getQuartier());                
                    $controle=true; 
                }  
            }
        }else{        
            if( $search->getZone()){            
                $qb->leftJoin('o.BienTontine', 'b');
                if($controle){
                    $qb->andWhere("b.zone = :zone")->setParameter('zone' , $search->getZone());
                }else{
                    $qb->where("b.zone = :zone")->setParameter('zone' , $search->getZone());                
                    $controle=true; 
                }  
            }
        }
        
        return $qb->getQuery()->getResult();
    }
}
